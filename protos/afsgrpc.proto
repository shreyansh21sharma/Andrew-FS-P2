// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

option java_package = "io.grpc.examples";
option objc_class_prefix = "HLW";

package afsgrpc;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  rpc rpc_fetch (FetchRequest) returns (FetchReply) {}

  rpc rpc_store (StoreRequest) returns (StoreReply) {}

  rpc rpc_getFileStat (StatRequest) returns (StatReply) {}

  rpc rpc_listDir (ListDirRequest) returns (stream ListDirReply) {}

  rpc rpc_rmdir (String) returns (OutputInfo){}

  rpc rpc_unlink(String) returns (OutputInfo){}

  rpc rpc_mkdir(MkdirRequest) returns (OutputInfo){}
}

message String {
	string str = 1;
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message FetchRequest {
  string path = 1;
}

message FetchReply {
  int32 error = 1;
  string reason = 2;
  int32 size = 3;
  bytes buf = 4;
}

message StoreRequest {
  string path = 1;
  int32 size = 2;
  bytes buf = 3;
}

message StoreReply {
  int32 error = 1;
  string reason = 2;
}

message StatRequest {
  string path = 1;
}

message StatReply {
  int32 error = 1;
  string reason = 2;
  bytes buf = 3;
}

message ListDirRequest {
    string path = 1;
}

message ListDirReply {
    int32 error = 1;
    string name = 2;
}

message OutputInfo {
    string str = 1;
    int32 err = 2;
}

message MkdirRequest {
    string s = 1;
    int32 mode = 2;
}